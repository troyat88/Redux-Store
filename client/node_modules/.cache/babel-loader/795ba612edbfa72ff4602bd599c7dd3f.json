{"ast":null,"code":"var _jsxFileName = \"/Users/Troy/Desktop/Redux Store/client/src/pages/Detail.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport { Link, useParams } from 'react-router-dom';\nimport { useQuery } from '@apollo/client';\nimport Cart from '../components/Cart'; //import { useStoreContext } from '../utils/GlobalState';\n\nimport { REMOVE_FROM_CART, UPDATE_CART_QUANTITY, ADD_TO_CART, UPDATE_PRODUCTS } from '../utils/actions';\nimport { QUERY_PRODUCTS } from '../utils/queries';\nimport { idbPromise } from '../utils/helpers';\nimport spinner from '../assets/spinner.gif';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction Detail() {\n  _s();\n\n  //const [state, dispatch] = useStoreContext();\n  const {\n    id\n  } = useParams();\n  const [currentProduct, setCurrentProduct] = useState({});\n  const {\n    loading,\n    data\n  } = useQuery(QUERY_PRODUCTS);\n  const {\n    products,\n    cart\n  } = state;\n  useEffect(() => {\n    // already in global store\n    if (products.length) {\n      setCurrentProduct(products.find(product => product._id === id));\n    } // retrieved from server\n    else if (data) {\n      dispatch({\n        type: UPDATE_PRODUCTS,\n        products: data.products\n      });\n      data.products.forEach(product => {\n        idbPromise('products', 'put', product);\n      });\n    } // get cache from idb\n    else if (!loading) {\n      idbPromise('products', 'get').then(indexedProducts => {\n        dispatch({\n          type: UPDATE_PRODUCTS,\n          products: indexedProducts\n        });\n      });\n    }\n  }, [products, data, loading, dispatch, id]);\n\n  const addToCart = () => {\n    const itemInCart = cart.find(cartItem => cartItem._id === id);\n\n    if (itemInCart) {\n      dispatch({\n        type: UPDATE_CART_QUANTITY,\n        _id: id,\n        purchaseQuantity: parseInt(itemInCart.purchaseQuantity) + 1\n      });\n      idbPromise('cart', 'put', { ...itemInCart,\n        purchaseQuantity: parseInt(itemInCart.purchaseQuantity) + 1\n      });\n    } else {\n      dispatch({\n        type: ADD_TO_CART,\n        product: { ...currentProduct,\n          purchaseQuantity: 1\n        }\n      });\n      idbPromise('cart', 'put', { ...currentProduct,\n        purchaseQuantity: 1\n      });\n    }\n  };\n\n  const removeFromCart = () => {\n    dispatch({\n      type: REMOVE_FROM_CART,\n      _id: currentProduct._id\n    });\n    idbPromise('cart', 'delete', { ...currentProduct\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [currentProduct && cart ? /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container my-1\",\n      children: [/*#__PURE__*/_jsxDEV(Link, {\n        to: \"/\",\n        children: \"\\u2190 Back to Products\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: currentProduct.name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: currentProduct.description\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: \"Price:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 13\n        }, this), \"$\", currentProduct.price, ' ', /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: addToCart,\n          children: \"Add to Cart\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          disabled: !cart.find(p => p._id === currentProduct._id),\n          onClick: removeFromCart,\n          children: \"Remove from Cart\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n        src: `/images/${currentProduct.image}`,\n        alt: currentProduct.name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 9\n    }, this) : null, loading ? /*#__PURE__*/_jsxDEV(\"img\", {\n      src: spinner,\n      alt: \"loading\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 18\n    }, this) : null, /*#__PURE__*/_jsxDEV(Cart, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n\n_s(Detail, \"8tKYLn4o9iUseNIXE/te7MVKuKQ=\", false, function () {\n  return [useParams, useQuery];\n});\n\n_c = Detail;\nexport default Detail;\n\nvar _c;\n\n$RefreshReg$(_c, \"Detail\");","map":{"version":3,"sources":["/Users/Troy/Desktop/Redux Store/client/src/pages/Detail.js"],"names":["React","useEffect","useState","Link","useParams","useQuery","Cart","REMOVE_FROM_CART","UPDATE_CART_QUANTITY","ADD_TO_CART","UPDATE_PRODUCTS","QUERY_PRODUCTS","idbPromise","spinner","Detail","id","currentProduct","setCurrentProduct","loading","data","products","cart","state","length","find","product","_id","dispatch","type","forEach","then","indexedProducts","addToCart","itemInCart","cartItem","purchaseQuantity","parseInt","removeFromCart","name","description","price","p","image"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { Link, useParams } from 'react-router-dom';\nimport { useQuery } from '@apollo/client';\n\nimport Cart from '../components/Cart';\n//import { useStoreContext } from '../utils/GlobalState';\nimport {\n  REMOVE_FROM_CART,\n  UPDATE_CART_QUANTITY,\n  ADD_TO_CART,\n  UPDATE_PRODUCTS,\n} from '../utils/actions';\nimport { QUERY_PRODUCTS } from '../utils/queries';\nimport { idbPromise } from '../utils/helpers';\nimport spinner from '../assets/spinner.gif';\n\nfunction Detail() {\n  //const [state, dispatch] = useStoreContext();\n  const { id } = useParams();\n\n  const [currentProduct, setCurrentProduct] = useState({});\n\n  const { loading, data } = useQuery(QUERY_PRODUCTS);\n\n  const { products, cart } = state;\n\n  useEffect(() => {\n    // already in global store\n    if (products.length) {\n      setCurrentProduct(products.find((product) => product._id === id));\n    }\n    // retrieved from server\n    else if (data) {\n      dispatch({\n        type: UPDATE_PRODUCTS,\n        products: data.products,\n      });\n\n      data.products.forEach((product) => {\n        idbPromise('products', 'put', product);\n      });\n    }\n    // get cache from idb\n    else if (!loading) {\n      idbPromise('products', 'get').then((indexedProducts) => {\n        dispatch({\n          type: UPDATE_PRODUCTS,\n          products: indexedProducts,\n        });\n      });\n    }\n  }, [products, data, loading, dispatch, id]);\n\n  const addToCart = () => {\n    const itemInCart = cart.find((cartItem) => cartItem._id === id);\n    if (itemInCart) {\n      dispatch({\n        type: UPDATE_CART_QUANTITY,\n        _id: id,\n        purchaseQuantity: parseInt(itemInCart.purchaseQuantity) + 1,\n      });\n      idbPromise('cart', 'put', {\n        ...itemInCart,\n        purchaseQuantity: parseInt(itemInCart.purchaseQuantity) + 1,\n      });\n    } else {\n      dispatch({\n        type: ADD_TO_CART,\n        product: { ...currentProduct, purchaseQuantity: 1 },\n      });\n      idbPromise('cart', 'put', { ...currentProduct, purchaseQuantity: 1 });\n    }\n  };\n\n  const removeFromCart = () => {\n    dispatch({\n      type: REMOVE_FROM_CART,\n      _id: currentProduct._id,\n    });\n\n    idbPromise('cart', 'delete', { ...currentProduct });\n  };\n\n  return (\n    <>\n      {currentProduct && cart ? (\n        <div className=\"container my-1\">\n          <Link to=\"/\">← Back to Products</Link>\n\n          <h2>{currentProduct.name}</h2>\n\n          <p>{currentProduct.description}</p>\n\n          <p>\n            <strong>Price:</strong>${currentProduct.price}{' '}\n            <button onClick={addToCart}>Add to Cart</button>\n            <button\n              disabled={!cart.find((p) => p._id === currentProduct._id)}\n              onClick={removeFromCart}\n            >\n              Remove from Cart\n            </button>\n          </p>\n\n          <img\n            src={`/images/${currentProduct.image}`}\n            alt={currentProduct.name}\n          />\n        </div>\n      ) : null}\n      {loading ? <img src={spinner} alt=\"loading\" /> : null}\n      <Cart />\n    </>\n  );\n}\n\nexport default Detail;\n"]},"metadata":{},"sourceType":"module"}